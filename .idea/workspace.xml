<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d787a77f-7c8b-43f3-b593-f7d84e8ebda1" name="Changes" comment=":recycle: refactor: solid&#10;redução dos tamanhos das funções&#10;inserção da arquitetura DAO">
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/controllers/Controller.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/controllers/JobController.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/controllers/LoginController.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/controllers/NaturalPersonController.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dao/JobDao.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dao/LegalPersonDao.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dao/LoginDao.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dao/impl/JobDaoImpl.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dao/impl/LegalPersonDaoImpl.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dto/AddressDto.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dto/JobDto.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dto/LoginDto.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/factorys/ControllerFactory.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/factorys/DaoFactory.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/factorys/ServiceFactory.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/server/Server.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/services/LoginService.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/services/impl/LegalPersonServiceImpl.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/services/impl/LoginServiceImpl.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/services/impl/NaturalPersonServiceImpl.groovy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/groovy/org/example/services/impl/SkillServiceImpl.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/Main.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/Main.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/dao/AddressDao.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dao/AddressDao.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/dao/NaturalPersonDao.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dao/NaturalPersonDao.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/dao/PersonDao.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dao/PersonDao.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/dao/SkillDao.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dao/SkillDao.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/dao/impl/AddressDaoImpl.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dao/impl/AddressDaoImpl.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/dao/impl/NaturalPersonDaoImpl.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dao/impl/NaturalPersonDaoImpl.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/dao/impl/PersonDaoImpl.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dao/impl/PersonDaoImpl.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/dao/impl/SkillDaoImpl.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/dao/impl/SkillDaoImpl.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/entity/JobEntity.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/entity/JobEntity.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/entity/LegalPersonEntity.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/entity/LegalPersonEntity.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/entity/PersonEntity.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/entity/PersonEntity.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/services/JobsService.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/services/JobsService.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/services/LegalPersonService.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/services/LegalPersonService.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/services/NaturalPersonService.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/services/NaturalPersonService.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/services/SkillService.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/services/SkillService.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/ui/JobsUI.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/ui/JobsUI.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/ui/LegalPersonUI.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/ui/LegalPersonUI.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/ui/NaturalPersonUI.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/ui/NaturalPersonUI.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/groovy/org/example/ui/SkillsUI.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/groovy/org/example/ui/SkillsUI.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/groovy/config/DatabaseTest.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/groovy/config/DatabaseTest.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/groovy/services/JobsServiceTest.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/groovy/services/JobsServiceTest.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/groovy/services/LegalPersonServiceTest.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/groovy/services/LegalPersonServiceTest.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/groovy/services/NaturalPersonServiceTest.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/groovy/services/NaturalPersonServiceTest.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/groovy/services/SkillServiceTest.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/groovy/services/SkillServiceTest.groovy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/groovy/utils/DBTest.groovy" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/groovy/utils/DBTest.groovy" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExportToHTMLSettings">
    <option name="OPEN_IN_BROWSER" value="true" />
    <option name="OUTPUT_DIRECTORY" value="$PROJECT_DIR$/htmlReport" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ZG-HERO_Project__K1-T9__Banco_de_Dados_PostgreSQL" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ZG-HERO_Project__K1-T9__Banco_de_Dados_PostgreSQL" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ZG-HERO_Project__K1-T9__Banco_de_Dados_PostgreSQL" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="verification" type="c8890929:TasksNode$1" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Alvaro125&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:Alvaro125/ZG-HERO_Project__K1-T9__Banco_de_Dados_PostgreSQL.git&quot;,
    &quot;accountId&quot;: &quot;d3607cc5-cd64-425e-a670-872fcda3e6c4&quot;
  }
}</component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2e67MgcdwmaBE7w1VHifpXPM9vM" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Gradle.Build ZG-HERO_Project__K1-T9__Banco_de_Dados_PostgreSQL.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.DatabaseTest.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.DatabaseTest.testConnectionClosed.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.DatabaseTest.testConnectionIsClosed.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.DatabaseTest.testConnectionIsValid.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.DatabaseTest.testConnectionNotNull.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.JobsServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.JobsServiceTest.should add a job.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.JobsServiceTest.should get a job by id.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.JobsServiceTest.should upgrade one job per id.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.LegalPersonServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.LegalPersonServiceTest.should add and retrieve a legal person.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.LegalPersonServiceTest.should delete a legal person.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.LegalPersonServiceTest.should update a legal person.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.NaturalPersonServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.NaturalPersonServiceTest.should add and retrieve a natural person.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.NaturalPersonServiceTest.should delete a natural person.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.NaturalPersonServiceTest.should update a natural person.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.SkillServiceSpec.should add a skill.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.SkillServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.SkillServiceTest.should add a skill and link to a person.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.SkillServiceTest.should add a skill successfully.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.SkillServiceTest.should add a skill.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.SkillServiceTest.should delete a skill and its links to people.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.SkillServiceTest.should get a skill by id.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.SkillServiceTest.should list skills from the database.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.SkillServiceTest.should list skills.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.SkillServiceTest.should upgrade one skill per id.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.SkillServiceTest.test addSkill method.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.SkillServiceTest.test listSkills method.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ZG-HERO_Project__K1-T9__Banco_de_Dados_PostgreSQL [:Main.main()].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ZG-HERO_Project__K1-T9__Banco_de_Dados_PostgreSQL [run].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ZG-HERO_Project__K1-T9__Banco_de_Dados_PostgreSQL [test].executor&quot;: &quot;Run&quot;,
    &quot;JUnit.LegalPersonServiceTest,should add and retrieve a legal person and 2 more.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/alvaro/Área de Trabalho/teagabank-backend-web&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/groovy/org/example" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="org.example.dto" />
      <recent name="org.example.controllers" />
      <recent name="org.example.services.impl" />
      <recent name="org.example.factorys" />
      <recent name="org.example.dao" />
    </key>
  </component>
  <component name="RunManager" selected="Application.Main">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.Main" />
      <module name="ZG-HERO_Project__K1-T9__Banco_de_Dados_PostgreSQL.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="JobsServiceTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;services.JobsServiceTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="JobsServiceTest.should add a job" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;services.JobsServiceTest.should add a job&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="JobsServiceTest.should get a job by id" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;services.JobsServiceTest.should get a job by id&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="JobsServiceTest.should upgrade one job per id" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;services.JobsServiceTest.should upgrade one job per id&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Main" />
        <item itemvalue="Gradle.JobsServiceTest.should upgrade one job per id" />
        <item itemvalue="Gradle.JobsServiceTest" />
        <item itemvalue="Gradle.JobsServiceTest.should get a job by id" />
        <item itemvalue="Gradle.JobsServiceTest.should add a job" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d787a77f-7c8b-43f3-b593-f7d84e8ebda1" name="Changes" comment="" />
      <created>1711213130611</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1711213130611</updated>
    </task>
    <task id="LOCAL-00001" summary=":tada: Commit inicial">
      <option name="closed" value="true" />
      <created>1711944629324</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1711944629324</updated>
    </task>
    <task id="LOCAL-00002" summary=":recycle: refactor: clean code&#10;adição dos principios clean code&#10;finalização dos tests Services">
      <option name="closed" value="true" />
      <created>1714187287120</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1714187287120</updated>
    </task>
    <task id="LOCAL-00003" summary=":books: docs: info de refactor">
      <option name="closed" value="true" />
      <created>1714187927866</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1714187927866</updated>
    </task>
    <task id="LOCAL-00004" summary=":recycle: refactor: solid&#10;redução dos tamanhos das funções&#10;inserção da arquitetura DAO">
      <option name="closed" value="true" />
      <created>1714447169217</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1714447169217</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="CUSTOM_BOOLEAN_PROPERTIES">
                <map>
                  <entry key="Show.Git.Branches" value="true" />
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value=":tada: Commit inicial" />
    <MESSAGE value=":recycle: refactor: clean code&#10;adição dos principios clean code&#10;finalização dos tests Services" />
    <MESSAGE value=":books: docs: info de refactor" />
    <MESSAGE value=":recycle: refactor: solid&#10;redução dos tamanhos das funções&#10;inserção da arquitetura DAO" />
    <option name="LAST_COMMIT_MESSAGE" value=":recycle: refactor: solid&#10;redução dos tamanhos das funções&#10;inserção da arquitetura DAO" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/ZG_HERO_Project__K1_T9__Banco_de_Dados_PostgreSQL$SkillServiceTest.ic" NAME="SkillServiceTest Coverage Results" MODIFIED="1714011954594" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true" />
  </component>
</project>